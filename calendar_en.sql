-- Create a date dimension table
-- CREATE OR REPLACE TABLE date_dimension AS
WITH RECURSIVE date_range AS (
  SELECT DATE('1970-01-01') AS DATA -- Start date
  UNION ALL
  SELECT DATEADD(DAY, 1, DATA)
  FROM date_range
  WHERE DATA < DATE('2050-12-31') -- End date
)
SELECT
  DATA,
  YEAR(DATA) AS YEAR,
  MONTH(DATA) AS MONTH,
  DAY(DATA) AS DAY,
  CASE
    WHEN MONTH(DATA) = 1 THEN 'January'
    WHEN MONTH(DATA) = 2 THEN 'February'
    WHEN MONTH(DATA) = 3 THEN 'March'
    WHEN MONTH(DATA) = 4 THEN 'April'
    WHEN MONTH(DATA) = 5 THEN 'May'
    WHEN MONTH(DATA) = 6 THEN 'June'
    WHEN MONTH(DATA) = 7 THEN 'July'
    WHEN MONTH(DATA) = 8 THEN 'August'
    WHEN MONTH(DATA) = 9 THEN 'September'
    WHEN MONTH(DATA) = 10 THEN 'October'
    WHEN MONTH(DATA) = 11 THEN 'November'
    WHEN MONTH(DATA) = 12 THEN 'December'
  END AS MONTH_DESC,
  CEIL(MONTH(DATA) / 3) AS QUARTER,
  CONCAT(CEIL(MONTH(DATA) / 3), 'th Quarter') AS QUARTER_DESC,
  CEIL(MONTH(DATA) / 4) AS QUADRIMESTER,
  CONCAT(CEIL(MONTH(DATA) / 4), 'th Quadrimester') AS QUADRIMESTER_DESC,
  CASE WHEN MONTH(DATA) <= 6 THEN 1 ELSE 2 END AS SEMESTER,
  CASE WHEN MONTH(DATA) <= 6 THEN '1st Semester' ELSE '2nd Semester' END AS SEMESTER_DESC,
  EXTRACT(DOW FROM DATA) + 1 AS DAY_OF_WEEK,
  CASE
    WHEN EXTRACT(DOW FROM DATA) = 0 THEN 'Sunday'
    WHEN EXTRACT(DOW FROM DATA) = 1 THEN 'Monday'
    WHEN EXTRACT(DOW FROM DATA) = 2 THEN 'Tuesday'
    WHEN EXTRACT(DOW FROM DATA) = 3 THEN 'Wednesday'
    WHEN EXTRACT(DOW FROM DATA) = 4 THEN 'Thursday'
    WHEN EXTRACT(DOW FROM DATA) = 5 THEN 'Friday'
    WHEN EXTRACT(DOW FROM DATA) = 6 THEN 'Saturday'
  END AS DAY_OF_WEEK_DESC,
  CEIL(DAY(DATA) / 7) AS WEEK_OF_MONTH,
  CONCAT(CEIL(DAY(DATA) / 7), 'th Week') AS WEEK_DESC,
  TO_NUMBER(TO_CHAR(DATA, 'YYYYMM')) AS YEAR_MONTH,
  TO_CHAR(DATA, 'MM-YYYY') AS MONTH_YEAR,
  CASE
    WHEN MONTH(DATA) = 1 THEN 'JAN'
    WHEN MONTH(DATA) = 2 THEN 'FEB'
    WHEN MONTH(DATA) = 3 THEN 'MAR'
    WHEN MONTH(DATA) = 4 THEN 'APR'
    WHEN MONTH(DATA) = 5 THEN 'MAY'
    WHEN MONTH(DATA) = 6 THEN 'JUN'
    WHEN MONTH(DATA) = 7 THEN 'JUL'
    WHEN MONTH(DATA) = 8 THEN 'AUG'
    WHEN MONTH(DATA) = 9 THEN 'SEP'
    WHEN MONTH(DATA) = 10 THEN 'OCT'
    WHEN MONTH(DATA) = 11 THEN 'NOV'
    WHEN MONTH(DATA) = 12 THEN 'DEC'
  END AS MONTH_ABBR,
  EXTRACT(DOW FROM DATA) + 1 AS DAY_OF_WEEK_ORD,
  CONCAT(EXTRACT(DOW FROM DATA) + 1, 'th Day') AS DAY_OF_WEEK_ORD_DESC,
  WEEK(DATA) AS WEEK_OF_YEAR,
  -- TO_NUMBER(TO_CHAR(DATA, 'YYYYWW')) AS YEAR_WEEK,
  DATEADD(DAY, -EXTRACT(DOW FROM DATA), DATA) AS WEEK_START_DATE_SUN,
  DATEADD(DAY, CASE WHEN EXTRACT(DOW FROM DATA) = 0 THEN -6 ELSE 1 - EXTRACT(DOW FROM DATA) END, DATA) AS WEEK_START_DATE_MON,
  DATE_TRUNC('MONTH', DATA) AS MONTH_START_DATE,
  DATE_TRUNC('YEAR', DATA) AS YEAR_START_DATE
FROM date_range;
